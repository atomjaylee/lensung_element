<import-sjs from="./dialog.sjs" name="sjs" />
<view 
  class="ls_dialog {{ contentVisible ? 'ls_dialog-active' : '' }} {{ sjs.attr(propData, 'className', className) }}"
  style="z-index: {{ sjs.attr(propData, 'zIndex', zIndex) }}; transform: translateZ({{ sjs.attr(propData, 'zIndex', zIndex) }}px); {{ sjs.attr(propData, 'style', style) }}" 
  a:if="{{ visible }}" 
  onAppear="onAppearHandler" 
  onTap="onMaskTapHandler" 
  data-nodeName="mask">
  <view class="ls_dialog-content {{ contentVisible ? 'ls_dialog-contentActive' : '' }}" onTransitionEnd="onTransitionEndHandler">
    <view class="ls_dialog-content_body">
      <text class="content_close iconfont icon--close" a:if="{{ sjs.attr(propData, 'closable', closable) }}"></text>
      <view class="content_title" a:if="{{ sjs.attr(propData, 'title', title) }}">{{ sjs.attr(propData, 'title', title) }}</view>
      <view class="content_icon" a:if="{{ sjs.attr(propData, 'icon', icon) }}">
        <text class="iconfont {{ sjs.fmtIcon(propData['icon'] ? propData['icon'] : icon) }}"></text>
      </view>
      <ls-flex class="content_text {{ sjs.attr(propData, 'title', title) ? '' : 'content_minHeight' }} {{ sjs.attr(propData, 'contentClass', contentClass) }}" justify="{{ sjs.attr(propData, 'contentJustify', contentJustify) }}" direction="{{ sjs.attr(propData, 'contentDirection', contentDirection) }}" align="{{ sjs.attr(propData, 'contentAlign', contentAlign) }}">
        <slot>
          <text number-of-lines="{{ sjs.attr(propData, 'maxLine', maxLine) }}">{{ sjs.attr(propData, 'content', content) }}</text>
          <text class="subText" a:if="{{sjs.attr(propData, 'subContent', subContent)}}">{{ sjs.attr(propData, 'subContent', subContent) }}</text>
        </slot>
      </ls-flex>
    </view>
    <view class="ls_dialog-content_buttons" hidden="{{ sjs.attr(propData, 'hiddenButtons', hiddenButtons) }}">
      <slot name="buttons">
        <ls-flex justify="center" class="ls_dialog-button-item ls_dialog-button_cancel" hidden="{{ isAlert }}" data-statistic="{{ sjs.attr(propData, 'statisticCancel', statisticCancel) }}" onTap="onCancelHandler">{{ sjs.attr(propData, 'cancelText', cancelText) }}</ls-flex>
        <ls-flex justify="center" class="ls_dialog-button-item ls_dialog-button_confirm" data-statistic="{{ sjs.attr(propData, 'statisticConfirm', statisticConfirm) }}" onTap="onConfirmHandler">{{ sjs.attr(propData, 'confirmText', confirmText) }}</ls-flex>
      </slot>
    </view>
  </view>
</view>